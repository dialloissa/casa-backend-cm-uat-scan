[
   {
      "conditions":{
         "all":[
            {
               "fact":"payer",
               "path":"$.accounts",
               "operator":"isArray",
               "value":false
            }
         ]
      },
      "event":{
         "type":"INVALID_QUOTE_REQUEST",
         "params":{
            "FSPIOPError":"PAYER_ERROR",
            "message":"Payer does not have any active account"
         }
      }
   },
   {
      "conditions":{
         "all":[
            {
               "fact":"payee",
               "path":"$.accounts",
               "operator":"isArray",
               "value":false
            }
         ]
      },
      "event":{
         "type":"INVALID_QUOTE_REQUEST",
         "params":{
            "FSPIOPError":"PAYEE_ERROR",
            "message":"Payee does not have any active accounts"
         }
      }
   },
   {
      "title":"This is MAD -> EUR This is only for testing should not go to PROD",
      "conditions":{
         "all":[
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"notIn",
               "value":[
                  "DFSPEUR",
                  "DFSPMAD",
                  "DFSPUGX",
                  "DFSPZMW",
                  "DFSPRWF",
                  "DFSPGHS",
                  "DFSPXOF",
                  "DFSPXTS",
                  "DFSPXXX"
               ]
            },
            {
               "fact":"payer",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"MAD"
            },
            {
               "fact":"payee",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"EUR"
            }
         ]
      },
      "event":{
         "type":"INTERCEPT_QUOTE",
         "params":{
            "rerouteToFsp":"DFSPMAD",
            "sourceCurrency":"MAD",
            "rerouteToFspCurrency":"EUR"
         }
      }
   },
   {
      "title":"This is XOF -> MAD This is only for testing should not go to PROD",
      "conditions":{
         "all":[
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"notIn",
               "value":[
                  "DFSPEUR",
                  "DFSPMAD",
                  "DFSPUGX",
                  "DFSPZMW",
                  "DFSPRWF",
                  "DFSPGHS",
                  "DFSPXOF",
                  "DFSPXTS",
                  "DFSPXXX",
                  "testfsp5"
               ]
            },
            {
               "fact":"payer",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"XOF"
            },
            {
               "fact":"payee",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"MAD"
            }
         ]
      },
      "event":{
         "type":"INTERCEPT_QUOTE",
         "params":{
            "rerouteToFsp":"DFSPXOF",
            "sourceCurrency":"XOF",
            "rerouteToFspCurrency":"MAD"
         }
      }
   },
   {
      "title":"This is XOF -> MAD This is only for testing should not go to PROD (MODIFIED testfsp5 to testfsp6  for AmountType SEND)",
      "conditions":{
         "all":[
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"notIn",
               "value":[
                  "DFSPEUR",
                  "DFSPMAD",
                  "DFSPUGX",
                  "DFSPZMW",
                  "DFSPRWF",
                  "DFSPGHS",
                  "DFSPXOF",
                  "DFSPXTS",
                  "DFSPXXX"
               ]
            },
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"equal",
               "value":"testfsp5"
            },
            {
               "fact":"headers",
               "path":"$.fspiop-destination",
               "operator":"equal",
               "value":"testfsp4"
            },
            {
               "fact":"payload",
               "path":"$.amountType",
               "operator":"equal",
               "value":"SEND"
            },
            {
               "fact":"payload",
               "path":"$.amount.currency",
               "operator":"equal",
               "value":"XOF"
            }
         ]
      },
      "event":{
         "type":"INTERCEPT_QUOTE",
         "params":{
            "rerouteToFsp":"DFSPXOF",
            "sourceCurrency":"XOF",
            "rerouteToFspCurrency":"MAD"
         }
      }
   },
   {
      "title":"This is XOF -> MAD This is only for testing should not go to PROD (MODIFIED testfsp5 to testfsp6  for AmountType RECEIVE)",
      "conditions":{
         "all":[
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"notIn",
               "value":[
                  "DFSPEUR",
                  "DFSPMAD",
                  "DFSPUGX",
                  "DFSPZMW",
                  "DFSPRWF",
                  "DFSPGHS",
                  "DFSPXOF",
                  "DFSPXTS",
                  "DFSPXXX"
               ]
            },
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"equal",
               "value":"testfsp5"
            },
            {
               "fact":"headers",
               "path":"$.fspiop-destination",
               "operator":"equal",
               "value":"testfsp4"
            },
            {
               "fact":"payload",
               "path":"$.amountType",
               "operator":"equal",
               "value":"RECEIVE"
            },
            {
               "fact":"payload",
               "path":"$.amount.currency",
               "operator":"equal",
               "value":"MAD"
            }
         ]
      },
      "event":{
         "type":"INTERCEPT_QUOTE",
         "params":{
            "rerouteToFsp":"DFSPXOF",
            "sourceCurrency":"XOF",
            "rerouteToFspCurrency":"MAD"
         }
      }
   },
   {
      "title":"This is MAD -> XOF This is only for testing should not go to PROD",
      "conditions":{
         "all":[
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"notIn",
               "value":[
                  "DFSPEUR",
                  "DFSPMAD",
                  "DFSPUGX",
                  "DFSPZMW",
                  "DFSPRWF",
                  "DFSPGHS",
                  "DFSPXOF",
                  "DFSPXTS",
                  "DFSPXXX"
               ]
            },
            {
               "fact":"payer",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"MAD"
            },
            {
               "fact":"payee",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"XOF"
            }
         ]
      },
      "event":{
         "type":"INTERCEPT_QUOTE",
         "params":{
            "rerouteToFsp":"DFSPMAD",
            "sourceCurrency":"MAD",
            "rerouteToFspCurrency":"XOF"
         }
      }
   },
   {
      "title":"This is XOF -> EUR This is only for testing should not go to PROD",
      "conditions":{
         "all":[
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"notIn",
               "value":[
                  "DFSPEUR",
                  "DFSPMAD",
                  "DFSPUGX",
                  "DFSPZMW",
                  "DFSPRWF",
                  "DFSPGHS",
                  "DFSPXOF",
                  "DFSPXTS",
                  "DFSPXXX"
               ]
            },
            {
               "fact":"payer",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"XOF"
            },
            {
               "fact":"payee",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"EUR"
            }
         ]
      },
      "event":{
         "type":"INTERCEPT_QUOTE",
         "params":{
            "rerouteToFsp":"DFSPXOF",
            "sourceCurrency":"XOF",
            "rerouteToFspCurrency":"EUR"
         }
      }
   },
   {
      "title":"This is EUR -> XOF This is only for testing should not go to PROD",
      "conditions":{
         "all":[
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"notIn",
               "value":[
                  "DFSPEUR",
                  "DFSPMAD",
                  "DFSPUGX",
                  "DFSPZMW",
                  "DFSPRWF",
                  "DFSPGHS",
                  "DFSPXOF",
                  "DFSPXTS",
                  "DFSPXXX"
               ]
            },
            {
               "fact":"payer",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"EUR"
            },
            {
               "fact":"payee",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"XOF"
            }
         ]
      },
      "event":{
         "type":"INTERCEPT_QUOTE",
         "params":{
            "rerouteToFsp":"DFSPEUR",
            "sourceCurrency":"EUR",
            "rerouteToFspCurrency":"XOF"
         }
      }
   },
   {
      "title":"This is EUR -> MAD",
      "conditions":{
         "all":[
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"notIn",
               "value":[
                  "DFSPEUR",
                  "DFSPMAD",
                  "DFSPUGX",
                  "DFSPZMW",
                  "DFSPRWF",
                  "DFSPGHS",
                  "DFSPXOF",
                  "DFSPXTS",
                  "DFSPXXX"
               ]
            },
            {
               "fact":"payer",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"EUR"
            },
            {
               "fact":"payee",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"MAD"
            }
         ]
      },
      "event":{
         "type":"INTERCEPT_QUOTE",
         "params":{
            "rerouteToFsp":"DFSPEUR",
            "sourceCurrency":"EUR",
            "rerouteToFspCurrency":"MAD"
         }
      }
   },
   {
      "title":"This is EUR -> GHS",
      "conditions":{
         "all":[
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"notIn",
               "value":[
                  "DFSPEUR",
                  "DFSPMAD",
                  "DFSPUGX",
                  "DFSPZMW",
                  "DFSPRWF",
                  "DFSPGHS",
                  "DFSPXOF",
                  "DFSPXTS",
                  "DFSPXXX"
               ]
            },
            {
               "fact":"payer",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"EUR"
            },
            {
               "fact":"payee",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"GHS"
            }
         ]
      },
      "event":{
         "type":"INTERCEPT_QUOTE",
         "params":{
            "rerouteToFsp":"DFSPEUR",
            "sourceCurrency":"EUR",
            "rerouteToFspCurrency":"GHS"
         }
      }
   },
   {
      "title":"This is UGX -> ZMW (MODIFIED testfsp5 to testfsp6  for AmountType SEND)",
      "conditions":{
         "all":[
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"notIn",
               "value":[
                  "DFSPEUR",
                  "DFSPMAD",
                  "DFSPUGX",
                  "DFSPZMW",
                  "DFSPRWF",
                  "DFSPGHS",
                  "DFSPXOF",
                  "DFSPXTS",
                  "DFSPXXX"
               ]
            },
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"equal",
               "value":"testfsp5"
            },
            {
               "fact":"headers",
               "path":"$.fspiop-destination",
               "operator":"equal",
               "value":"testfsp6"
            },
            {
               "fact":"payload",
               "path":"$.amountType",
               "operator":"equal",
               "value":"SEND"
            },
            {
               "fact":"payload",
               "path":"$.amount.currency",
               "operator":"equal",
               "value":"UGX"
            }
         ]
      },
      "event":{
         "type":"INTERCEPT_QUOTE",
         "params":{
            "rerouteToFsp":"DFSPUGX",
            "sourceCurrency":"UGX",
            "rerouteToFspCurrency":"ZMW"
         }
      }
   },
   {
      "title":"This is UGX -> ZMW (MODIFIED testfsp5 to testfsp6  for AmountType RECEIVE)",
      "conditions":{
         "all":[
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"notIn",
               "value":[
                  "DFSPEUR",
                  "DFSPMAD",
                  "DFSPUGX",
                  "DFSPZMW",
                  "DFSPRWF",
                  "DFSPGHS",
                  "DFSPXOF",
                  "DFSPXTS",
                  "DFSPXXX"
               ]
            },
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"equal",
               "value":"testfsp5"
            },
            {
               "fact":"headers",
               "path":"$.fspiop-destination",
               "operator":"equal",
               "value":"testfsp6"
            },
            {
               "fact":"payload",
               "path":"$.amountType",
               "operator":"equal",
               "value":"RECEIVE"
            },
            {
               "fact":"payload",
               "path":"$.amount.currency",
               "operator":"equal",
               "value":"ZMW"
            }
         ]
      },
      "event":{
         "type":"INTERCEPT_QUOTE",
         "params":{
            "rerouteToFsp":"DFSPUGX",
            "sourceCurrency":"UGX",
            "rerouteToFspCurrency":"ZMW"
         }
      }
   },
   {
      "title":"This is ZMW -> UGX (MODIFIED testfsp6 to testfsp5  for AmountType SEND)",
      "conditions":{
         "all":[
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"notIn",
               "value":[
                  "DFSPEUR",
                  "DFSPMAD",
                  "DFSPUGX",
                  "DFSPZMW",
                  "DFSPRWF",
                  "DFSPGHS",
                  "DFSPXOF",
                  "DFSPXTS",
                  "DFSPXXX"
               ]
            },
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"equal",
               "value":"testfsp6"
            },
            {
               "fact":"headers",
               "path":"$.fspiop-destination",
               "operator":"equal",
               "value":"testfsp5"
            },
            {
               "fact":"payload",
               "path":"$.amountType",
               "operator":"equal",
               "value":"SEND"
            },
            {
               "fact":"payload",
               "path":"$.amount.currency",
               "operator":"equal",
               "value":"ZMW"
            }
         ]
      },
      "event":{
         "type":"INTERCEPT_QUOTE",
         "params":{
            "rerouteToFsp":"DFSPZMW",
            "sourceCurrency":"ZMW",
            "rerouteToFspCurrency":"UGX"
         }
      }
   },
   {
      "title":"This is ZMW -> UGX (MODIFIED testfsp6 to testfsp5  for AmountType RECEIVE)",
      "conditions":{
         "all":[
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"notIn",
               "value":[
                  "DFSPEUR",
                  "DFSPMAD",
                  "DFSPUGX",
                  "DFSPZMW",
                  "DFSPRWF",
                  "DFSPGHS",
                  "DFSPXOF",
                  "DFSPXTS",
                  "DFSPXXX"
               ]
            },
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"equal",
               "value":"testfsp6"
            },
            {
               "fact":"headers",
               "path":"$.fspiop-destination",
               "operator":"equal",
               "value":"testfsp5"
            },
            {
               "fact":"payload",
               "path":"$.amountType",
               "operator":"equal",
               "value":"RECEIVE"
            },
            {
               "fact":"payload",
               "path":"$.amount.currency",
               "operator":"equal",
               "value":"UGX"
            }
         ]
      },
      "event":{
         "type":"INTERCEPT_QUOTE",
         "params":{
            "rerouteToFsp":"DFSPZMW",
            "sourceCurrency":"ZMW",
            "rerouteToFspCurrency":"UGX"
         }
      }
   },
   {
      "title":"This is UGX -> RWF",
      "conditions":{
         "all":[
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"notIn",
               "value":[
                  "DFSPEUR",
                  "DFSPMAD",
                  "DFSPUGX",
                  "DFSPZMW",
                  "DFSPRWF",
                  "DFSPGHS",
                  "DFSPXOF",
                  "DFSPXTS",
                  "DFSPXXX"
               ]
            },
            {
               "fact":"payer",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"UGX"
            },
            {
               "fact":"payee",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"RWF"
            }
         ]
      },
      "event":{
         "type":"INTERCEPT_QUOTE",
         "params":{
            "rerouteToFsp":"DFSPUGX",
            "sourceCurrency":"UGX",
            "rerouteToFspCurrency":"RWF"
         }
      }
   },
   {
      "title":"This is RWF -> UGX",
      "conditions":{
         "all":[
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"notIn",
               "value":[
                  "DFSPEUR",
                  "DFSPMAD",
                  "DFSPUGX",
                  "DFSPZMW",
                  "DFSPRWF",
                  "DFSPGHS",
                  "DFSPXOF",
                  "DFSPXTS",
                  "DFSPXXX"
               ]
            },
            {
               "fact":"payer",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"RWF"
            },
            {
               "fact":"payee",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"UGX"
            }
         ]
      },
      "event":{
         "type":"INTERCEPT_QUOTE",
         "params":{
            "rerouteToFsp":"DFSPRWF",
            "sourceCurrency":"RWF",
            "rerouteToFspCurrency":"UGX"
         }
      }
   },
   {
      "title":"This is ZMW -> RWF",
      "conditions":{
         "all":[
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"notIn",
               "value":[
                  "DFSPEUR",
                  "DFSPMAD",
                  "DFSPUGX",
                  "DFSPZMW",
                  "DFSPRWF",
                  "DFSPGHS",
                  "DFSPXOF",
                  "DFSPXTS",
                  "DFSPXXX"
               ]
            },
            {
               "fact":"payer",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"ZMW"
            },
            {
               "fact":"payee",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"RWF"
            }
         ]
      },
      "event":{
         "type":"INTERCEPT_QUOTE",
         "params":{
            "rerouteToFsp":"DFSPZMW",
            "sourceCurrency":"ZMW",
            "rerouteToFspCurrency":"RWF"
         }
      }
   },
   {
      "title":"This is RWF -> ZMW",
      "conditions":{
         "all":[
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"notIn",
               "value":[
                  "DFSPEUR",
                  "DFSPMAD",
                  "DFSPUGX",
                  "DFSPZMW",
                  "DFSPRWF",
                  "DFSPGHS",
                  "DFSPXOF",
                  "DFSPXTS",
                  "DFSPXXX"
               ]
            },
            {
               "fact":"payer",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"RWF"
            },
            {
               "fact":"payee",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"ZMW"
            }
         ]
      },
      "event":{
         "type":"INTERCEPT_QUOTE",
         "params":{
            "rerouteToFsp":"DFSPRWF",
            "sourceCurrency":"RWF",
            "rerouteToFspCurrency":"ZMW"
         }
      }
   },
   {
      "title":"This is XTS -> XXX This is only for testing should not go to PROD",
      "conditions":{
         "all":[
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"notIn",
               "value":[
                  "DFSPEUR",
                  "DFSPMAD",
                  "DFSPUGX",
                  "DFSPZMW",
                  "DFSPRWF",
                  "DFSPGHS",
                  "DFSPXOF",
                  "DFSPXTS",
                  "DFSPXXX"
               ]
            },
            {
               "fact":"payer",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"XTS"
            },
            {
               "fact":"payee",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"XXX"
            }
         ]
      },
      "event":{
         "type":"INTERCEPT_QUOTE",
         "params":{
            "rerouteToFsp":"DFSPXTS",
            "sourceCurrency":"XTS",
            "rerouteToFspCurrency":"XXX"
         }
      }
   },
   {
      "title":"This is XXX -> XTS This is only for testing should not go to PROD",
      "conditions":{
         "all":[
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"notIn",
               "value":[
                  "DFSPEUR",
                  "DFSPMAD",
                  "DFSPUGX",
                  "DFSPZMW",
                  "DFSPRWF",
                  "DFSPGHS",
                  "DFSPXOF",
                  "DFSPXTS",
                  "DFSPXXX"
               ]
            },
            {
               "fact":"payer",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"XXX"
            },
            {
               "fact":"payee",
               "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency",
               "operator":"equal",
               "value":"XTS"
            }
         ]
      },
      "event":{
         "type":"INTERCEPT_QUOTE",
         "params":{
            "rerouteToFsp":"DFSPXXX",
            "sourceCurrency":"XXX",
            "rerouteToFspCurrency":"XTS"
         }
      }
   },
   {
      "conditions":{
         "all":[
            {
               "fact":"payload",
               "path":"$.amountType",
               "operator":"equal",
               "value":"SEND"
            },
            {
               "fact":"payload",
               "path":"$.amount.currency",
               "operator":"notIn",
               "value":{
                  "fact":"payer",
                  "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency"
               }
            }
         ]
      },
      "event":{
         "type":"INVALID_QUOTE_REQUEST",
         "params":{
            "FSPIOPError":"PAYER_UNSUPPORTED_CURRENCY",
            "message":"Requested currency not available for payer"
         }
      }
   },
   {
      "conditions":{
         "all":[
            {
               "fact":"payload",
               "path":"$.amountType",
               "operator":"equal",
               "value":"RECEIVE"
            },
            {
               "fact":"payload",
               "path":"$.amount.currency",
               "operator":"notIn",
               "value":{
                  "fact":"payee",
                  "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency"
               }
            }
         ]
      },
      "event":{
         "type":"INVALID_QUOTE_REQUEST",
         "params":{
            "FSPIOPError":"PAYEE_UNSUPPORTED_CURRENCY",
            "message":"Requested currency not available for payee"
         }
      }
   },
   {
      "conditions":{
         "all":[
            {
               "any":[
                  {
                     "fact":"payload",
                     "path":"$.amount.currency",
                     "operator":"notIn",
                     "value":{
                        "fact":"payee",
                        "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency"
                     }
                  },
                  {
                     "fact":"payload",
                     "path":"$.amount.currency",
                     "operator":"notIn",
                     "value":{
                        "fact":"payer",
                        "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency"
                     }
                  }
               ]
            },
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"notIn",
               "value":[
                  "DFSPEUR",
                  "DFSPMAD",
                  "DFSPUGX",
                  "DFSPZMW",
                  "DFSPRWF",
                  "DFSPGHS",
                  "DFSPXOF",
                  "DFSPXTS",
                  "DFSPXXX"
               ]
            },
            {
               "fact":"headers",
               "path":"$.fspiop-source",
               "operator":"notEqual",
               "value":{
                  "fact":"payload",
                  "path":"$.payer.partyIdInfo.fspId"
               }
            }
         ]
      },
      "event":{
         "type":"INVALID_QUOTE_REQUEST",
         "params":{
            "FSPIOPError":"VALIDATION_ERROR",
            "message":"The payer FSP does not match the fspiop-source header"
         }
      }
   },
   {
      "conditions":{
         "all":[
            {
               "any":[
                  {
                     "fact":"payload",
                     "path":"$.amount.currency",
                     "operator":"notIn",
                     "value":{
                        "fact":"payee",
                        "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency"
                     }
                  },
                  {
                     "fact":"payload",
                     "path":"$.amount.currency",
                     "operator":"notIn",
                     "value":{
                        "fact":"payer",
                        "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency"
                     }
                  }
               ]
            },
            {
               "fact":"payload",
               "path":"$.payer.personalInfo",
               "operator":"isObject",
               "value":false
            }
         ]
      },
      "event":{
         "type":"INVALID_QUOTE_REQUEST",
         "params":{
            "FSPIOPError":"MISSING_ELEMENT",
            "message":"PartyPersonalInfo is required"
         }
      }
   },
   {
      "conditions":{
         "all":[
            {
               "any":[
                  {
                     "fact":"payload",
                     "path":"$.amount.currency",
                     "operator":"notIn",
                     "value":{
                        "fact":"payee",
                        "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency"
                     }
                  },
                  {
                     "fact":"payload",
                     "path":"$.amount.currency",
                     "operator":"notIn",
                     "value":{
                        "fact":"payer",
                        "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency"
                     }
                  }
               ]
            },
            {
               "fact":"payload",
               "path":"$.payer.personalInfo.complexName.firstName",
               "operator":"isString",
               "value":false
            }
         ]
      },
      "event":{
         "type":"INVALID_QUOTE_REQUEST",
         "params":{
            "FSPIOPError":"MISSING_ELEMENT",
            "message":"firstName is required"
         }
      }
   },
   {
      "conditions":{
         "all":[
            {
               "any":[
                  {
                     "fact":"payload",
                     "path":"$.amount.currency",
                     "operator":"notIn",
                     "value":{
                        "fact":"payee",
                        "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency"
                     }
                  },
                  {
                     "fact":"payload",
                     "path":"$.amount.currency",
                     "operator":"notIn",
                     "value":{
                        "fact":"payer",
                        "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency"
                     }
                  }
               ]
            },
            {
               "fact":"payload",
               "path":"$.payer.personalInfo.complexName.lastName",
               "operator":"isString",
               "value":false
            }
         ]
      },
      "event":{
         "type":"INVALID_QUOTE_REQUEST",
         "params":{
            "FSPIOPError":"MISSING_ELEMENT",
            "message":"lastName is required"
         }
      }
   },
   {
      "conditions":{
         "all":[
            {
               "any":[
                  {
                     "fact":"payload",
                     "path":"$.amount.currency",
                     "operator":"notIn",
                     "value":{
                        "fact":"payee",
                        "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency"
                     }
                  },
                  {
                     "fact":"payload",
                     "path":"$.amount.currency",
                     "operator":"notIn",
                     "value":{
                        "fact":"payer",
                        "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency"
                     }
                  }
               ]
            },
            {
               "fact":"payload",
               "path":"$.payer.personalInfo.dateOfBirth",
               "operator":"isString",
               "value":false
            }
         ]
      },
      "event":{
         "type":"INVALID_QUOTE_REQUEST",
         "params":{
            "FSPIOPError":"MISSING_ELEMENT",
            "message":"dateOfBirth is required"
         }
      }
   },
   {
      "conditions":{
         "all":[
            {
               "any":[
                  {
                     "fact":"payload",
                     "path":"$.amount.currency",
                     "operator":"notIn",
                     "value":{
                        "fact":"payee",
                        "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency"
                     }
                  },
                  {
                     "fact":"payload",
                     "path":"$.amount.currency",
                     "operator":"notIn",
                     "value":{
                        "fact":"payer",
                        "path":"$.accounts[?(@.ledgerAccountType == 'POSITION' && @.isActive  == 1)].currency"
                     }
                  }
               ]
            },
            {
               "fact":"payload",
               "path":"$.payer.personalInfo.dateOfBirth",
               "operator":"equal",
               "value":""
            }
         ]
      },
      "event":{
         "type":"INVALID_QUOTE_REQUEST",
         "params":{
            "FSPIOPError":"MALFORMED_SYNTAX",
            "message":"Malformed Payer dateOfBirth"
         }
      }
   }
]